C51 COMPILER V9.01   EEPROM                                                                04/30/2017 10:50:25 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN EEPROM.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE EEPROM.C LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <STC15W4K60S4.H>
   2          #include <EEPROM.h>
   3          #include <intrins.h>
   4          #include <NRF24L01.H>
   5          #include <MPU6050.H>
   6          #define CMD_IDLE    0            
   7          #define CMD_READ    1              
   8          #define CMD_PROGRAM 2               
   9          #define CMD_ERASE   3              
  10          
  11          #define ENABLE_IAP 0x80           //if SYSCLK<30MHz
  12          extern int g_x,g_y,g_z;            //陀螺仪矫正参数
  13          extern char a_x,a_y;               //角度矫正参数
  14          extern double Angle,Angley;
  15          void IapIdle()
  16          {
  17   1          IAP_CONTR = 0;                 
  18   1          IAP_CMD = 0;                    
  19   1          IAP_TRIG = 0;                  
  20   1          IAP_ADDRH = 0x80;              
  21   1          IAP_ADDRL = 0;
  22   1      }
  23          unsigned char IapReadByte(unsigned int addr) //读取1字节
  24          {
  25   1          unsigned char dat;                  
  26   1          IAP_CONTR = ENABLE_IAP;       
  27   1          IAP_CMD = CMD_READ;           
  28   1          IAP_ADDRL = addr;             
  29   1          IAP_ADDRH = addr >> 8;          
  30   1          IAP_TRIG = 0x5a;             
  31   1          IAP_TRIG = 0xa5;             
  32   1          _nop_();                      
  33   1          dat = IAP_DATA;
  34   1          IapIdle();  
  35   1          return dat;                   
  36   1      }
  37          
  38          void IapProgramByte(unsigned int addr, unsigned char dat) //写入1字节
  39          {
  40   1          IAP_CONTR = ENABLE_IAP;        
  41   1          IAP_CMD = CMD_PROGRAM;        
  42   1          IAP_ADDRL = addr;             
  43   1          IAP_ADDRH = addr >> 8;         
  44   1          IAP_DATA = dat;                
  45   1          IAP_TRIG = 0x5a;              
  46   1          IAP_TRIG = 0xa5;                
  47   1          _nop_();    
  48   1          IapIdle();  
  49   1      }
  50          
  51          void IapEraseSector(unsigned int addr) //扇区擦除
  52          {
  53   1          IAP_CONTR = ENABLE_IAP;        
  54   1          IAP_CMD = CMD_ERASE;          
  55   1          IAP_ADDRL = addr;             
C51 COMPILER V9.01   EEPROM                                                                04/30/2017 10:50:25 PAGE 2   

  56   1          IAP_ADDRH = addr >> 8;         
  57   1          IAP_TRIG = 0x5a;              
  58   1          IAP_TRIG = 0xa5;               
  59   1          _nop_(); 
  60   1          IapIdle();  
  61   1      }
  62          void IAP_Gyro()   //陀螺仪校准
  63          {
  64   1              IapEraseSector(0xE200); //扇区擦除
  65   1              g_y = GetData(GYRO_YOUT_H);  //读取陀螺仪数据
  66   1              g_x = GetData(GYRO_XOUT_H);
  67   1              g_z = GetData(GYRO_ZOUT_H);
  68   1              IapProgramByte(0xE200,g_y>>8);  //写入数据至EEPROM
  69   1              IapProgramByte(0xE201,g_y); 
  70   1              IapProgramByte(0xE202,g_x>>8);     //陀螺仪数据存放至114扇区
  71   1              IapProgramByte(0xE203,g_x);
  72   1              IapProgramByte(0xE204,g_z>>8);
  73   1              IapProgramByte(0xE205,g_z);
  74   1              IapProgramByte(0xE206,1);
  75   1      }
  76          void IAP_Angle()
  77          {
  78   1              IapEraseSector(0xE400);           //加速度计数据存放至115扇区
  79   1              a_x=(char)Angle;
  80   1              a_y=(char)Angley;
  81   1              IapProgramByte(0xE400,1);
  82   1              IapProgramByte(0xE401,a_x);
  83   1              IapProgramByte(0xE402,a_y);
  84   1      }
  85          void IAPRead()
  86          {
  87   1              unsigned char i;
  88   1              i=IapReadByte(0xE206);
  89   1              if(i==1)      //判断数据是否已经更新过，更新过才读取数据
  90   1              {
  91   2              g_y=IapReadByte(0xE200)<<8|IapReadByte(0xE201);
  92   2              g_x=IapReadByte(0xE202)<<8|IapReadByte(0xE203);
  93   2              g_z=IapReadByte(0xE204)<<8|IapReadByte(0xE205);
  94   2              }
  95   1              i=IapReadByte(0xE400);
  96   1              if(i==1)      //判断数据是否已经更新过，更新过才读取数据
  97   1              {
  98   2              a_x=IapReadByte(0xE401);
  99   2              a_y=IapReadByte(0xE402);
 100   2              }
 101   1      }
 102          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    393    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

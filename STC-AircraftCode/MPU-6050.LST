C51 COMPILER V9.01   MPU_6050                                                              04/30/2017 10:50:26 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MPU_6050
OBJECT MODULE PLACED IN MPU-6050.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE MPU-6050.C LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <STC15W4K60S4.H>
   2          #include <intrins.h>
   3          #include <MPU6050.H>
   4          #include <NRF24L01.H>
   5          sbit    SCL=P0^0;                       //IIC ±÷”“˝Ω≈∂®“Â    Rev8.0”≤º˛
   6          sbit    SDA=P4^6;                       //IIC ˝æ›“˝Ω≈∂®“Â
   7          //sbit    SCL=P2^5;                     //IIC ±÷”“˝Ω≈∂®“Â      Rev7.0”≤º˛
   8          //sbit    SDA=P2^6;                     //IIC ˝æ›“˝Ω≈∂®“Â
   9          void  InitMPU6050();                                                                                                    //≥ı ºªØMPU6050
  10          void  Delay2us();
  11          void  I2C_Start();
  12          void  I2C_Stop();
  13          
  14          bit   I2C_RecvACK();
  15          
  16          void  I2C_SendByte(uchar dat);
  17          uchar I2C_RecvByte();
  18          
  19          void  I2C_ReadPage();
  20          void  I2C_WritePage();
  21          uchar Single_ReadI2C(uchar REG_Address);                                                //∂¡»°I2C ˝æ›
  22          void  Single_WriteI2C(uchar REG_Address,uchar REG_data);        //œÚI2C–¥»Î ˝æ›
  23          
  24          //I^C ±–Ú÷–—” ±…Ë÷√£¨æﬂÃÂ≤Œº˚∏˜–æ∆¨µƒ ˝æ› ÷≤·  6050Õ∆ºˆ◊Ó–°1.3us µ´ «ª·≥ˆŒ Ã‚£¨’‚¿Ô—” ± µº 1.9us◊Û”“
  25          void Delay2us() 
  26          {
  27   1              unsigned char i;
  28   1              i = 11;
  29   1              while (--i);
  30   1      }
  31          //**************************************
  32          //I2C∆ º–≈∫≈
  33          //**************************************
  34          void I2C_Start()
  35          {
  36   1          SDA = 1;                    //¿≠∏ﬂ ˝æ›œﬂ
  37   1          SCL = 1;                    //¿≠∏ﬂ ±÷”œﬂ
  38   1          Delay2us();                 //—” ±
  39   1          SDA = 0;                    //≤˙…˙œ¬Ωµ—ÿ
  40   1          Delay2us();                 //—” ±
  41   1          SCL = 0;                    //¿≠µÕ ±÷”œﬂ
  42   1      }
  43          //**************************************
  44          //I2CÕ£÷π–≈∫≈
  45          //**************************************
  46          void I2C_Stop()
  47          {
  48   1          SDA = 0;                    //¿≠µÕ ˝æ›œﬂ
  49   1          SCL = 1;                    //¿≠∏ﬂ ±÷”œﬂ
  50   1          Delay2us();                 //—” ±
  51   1          SDA = 1;                    //≤˙…˙…œ…˝—ÿ
  52   1          Delay2us();                 //—” ±
  53   1      }
  54          //**************************************
  55          //I2CΩ” ’”¶¥–≈∫≈
C51 COMPILER V9.01   MPU_6050                                                              04/30/2017 10:50:26 PAGE 2   

  56          //**************************************
  57          bit I2C_RecvACK()
  58          {
  59   1          SCL = 1;                    //¿≠∏ﬂ ±÷”œﬂ
  60   1          Delay2us();                 //—” ±
  61   1          CY = SDA;                   //∂¡”¶¥–≈∫≈
  62   1          SCL = 0;                    //¿≠µÕ ±÷”œﬂ
  63   1          Delay2us();                 //—” ±
  64   1          return CY;
  65   1      }
  66          //**************************************
  67          //œÚI2C◊‹œﬂ∑¢ÀÕ“ª∏ˆ◊÷Ω⁄ ˝æ›
  68          //**************************************
  69          void I2C_SendByte(uchar dat)
  70          {
  71   1          uchar i;
  72   1          for (i=0; i<8; i++)         //8Œªº∆ ˝∆˜
  73   1          {
  74   2              dat <<= 1;              //“∆≥ˆ ˝æ›µƒ◊Ó∏ﬂŒª
  75   2              SDA = CY;               //ÀÕ ˝æ›ø⁄
  76   2              SCL = 1;                //¿≠∏ﬂ ±÷”œﬂ
  77   2              Delay2us();             //—” ±
  78   2              SCL = 0;                //¿≠µÕ ±÷”œﬂ
  79   2              Delay2us();             //—” ±
  80   2          }
  81   1          I2C_RecvACK();
  82   1      }
  83          //**************************************
  84          //¥”I2C◊‹œﬂΩ” ’“ª∏ˆ◊÷Ω⁄ ˝æ›
  85          //**************************************
  86          uchar I2C_RecvByte()
  87          {
  88   1          uchar i;
  89   1          uchar dat = 0;
  90   1          SDA = 1;                    // πƒ‹ƒ⁄≤ø…œ¿≠,◊º±∏∂¡»° ˝æ›,
  91   1          for (i=0; i<8; i++)         //8Œªº∆ ˝∆˜
  92   1          {
  93   2              dat <<= 1;
  94   2              SCL = 1;                //¿≠∏ﬂ ±÷”œﬂ
  95   2              Delay2us();             //—” ±
  96   2              dat |= SDA;             //∂¡ ˝æ›
  97   2              SCL = 0;                //¿≠µÕ ±÷”œﬂ
  98   2              Delay2us();             //—” ±
  99   2          }
 100   1          return dat;
 101   1      }
 102          //**************************************
 103          //œÚI2C…Ë±∏–¥»Î“ª∏ˆ◊÷Ω⁄ ˝æ›
 104          //**************************************
 105          void Single_WriteI2C(uchar REG_Address,uchar REG_data)
 106          {
 107   1          I2C_Start();                  //∆ º–≈∫≈
 108   1          I2C_SendByte(SlaveAddress);   //∑¢ÀÕ…Ë±∏µÿ÷∑+–¥–≈∫≈
 109   1          I2C_SendByte(REG_Address);    //ƒ⁄≤øºƒ¥Ê∆˜µÿ÷∑£¨
 110   1          I2C_SendByte(REG_data);       //ƒ⁄≤øºƒ¥Ê∆˜ ˝æ›£¨
 111   1          I2C_Stop();                   //∑¢ÀÕÕ£÷π–≈∫≈
 112   1      }
 113          //**************************************
 114          //¥”I2C…Ë±∏∂¡»°“ª∏ˆ◊÷Ω⁄ ˝æ›
 115          //**************************************
 116          uchar Single_ReadI2C(uchar REG_Address)
 117          {
C51 COMPILER V9.01   MPU_6050                                                              04/30/2017 10:50:26 PAGE 3   

 118   1              uchar REG_data;
 119   1              I2C_Start();                   //∆ º–≈∫≈
 120   1              I2C_SendByte(SlaveAddress);    //∑¢ÀÕ…Ë±∏µÿ÷∑+–¥–≈∫≈
 121   1              I2C_SendByte(REG_Address);     //∑¢ÀÕ¥Ê¥¢µ•‘™µÿ÷∑£¨¥”0ø™ º
 122   1              I2C_Start();                   //∆ º–≈∫≈
 123   1              I2C_SendByte(SlaveAddress+1);  //∑¢ÀÕ…Ë±∏µÿ÷∑+∂¡–≈∫≈
 124   1              REG_data=I2C_RecvByte();       //∂¡≥ˆºƒ¥Ê∆˜ ˝æ›
 125   1              
 126   1              SDA = 1;                    //–¥”¶¥–≈∫≈
 127   1        SCL = 1;                    //¿≠∏ﬂ ±÷”œﬂ
 128   1        Delay2us();                 //—” ±
 129   1        SCL = 0;                    //¿≠µÕ ±÷”œﬂ
 130   1        Delay2us();                 //—” ±
 131   1              
 132   1              I2C_Stop();                    //Õ£÷π–≈∫≈
 133   1              return REG_data;
 134   1      }
 135          
 136          //**************************************
 137          //≥ı ºªØMPU6050
 138          //**************************************
 139          void InitMPU6050()
 140          {
 141   1              Single_WriteI2C(PWR_MGMT_1, 0x00);      //Ω‚≥˝–›√ﬂ◊¥Ã¨
 142   1              Single_WriteI2C(SMPLRT_DIV, 0x07);  //Õ”¬›“«125hz
 143   1              Single_WriteI2C(CONFIG, 0x04);      //21HZ¬À≤® —” ±A8.5ms G8.3ms  ¥À¥¶»°÷µ”¶œ‡µ±◊¢“‚£¨—” ±”ÎœµÕ≥÷‹∆⁄œ‡Ω¸Œ
             -™“À
 144   1              Single_WriteI2C(GYRO_CONFIG, 0x08); //Õ”¬›“«500∂»/S 65.5LSB/g
 145   1              Single_WriteI2C(ACCEL_CONFIG, 0x08);//º”ÀŸ∂»+-4g  8192LSB/g
 146   1      }
 147          //**************************************
 148          //∫œ≥… ˝æ›
 149          //**************************************
 150          int GetData(uchar REG_Address)
 151          {
 152   1              char H,L;
 153   1              H=Single_ReadI2C(REG_Address);
 154   1              L=Single_ReadI2C(REG_Address+1);
 155   1              return (H<<8)+L;   //∫œ≥… ˝æ›
 156   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    240    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
